// This code was AUTOGENERATED using the library.
// Please DO NOT EDIT THIS FILE.

package spl_token_2022

import binary "github.com/gagliardetto/binary"

// AccountState Enum
type AccountState binary.BorshEnum

const (
	AccountStateUninitialized AccountState = iota
	AccountStateInitialized
	AccountStateFrozen
)

func (value AccountState) String() string {
	switch value {
	case AccountStateUninitialized:
		return "Uninitialized"
	case AccountStateInitialized:
		return "Initialized"
	case AccountStateFrozen:
		return "Frozen"
	default:
		return ""
	}
}

// ExtensionType Enum
type ExtensionType binary.BorshEnum

const (
	ExtensionTypeUninitialized ExtensionType = iota
	ExtensionTypeTransferFeeConfig
	ExtensionTypeTransferFeeAmount
	ExtensionTypeMintCloseAuthority
	ExtensionTypeConfidentialTransferMint
	ExtensionTypeConfidentialTransferAccount
	ExtensionTypeDefaultAccountState
	ExtensionTypeImmutableOwner
	ExtensionTypeMemoTransfer
	ExtensionTypeNonTransferable
	ExtensionTypeInterestBearingConfig
	ExtensionTypeCpiGuard
	ExtensionTypePermanentDelegate
	ExtensionTypeNonTransferableAccount
	ExtensionTypeTransferHook
	ExtensionTypeTransferHookAccount
	ExtensionTypeConfidentialTransferFeeConfig
	ExtensionTypeConfidentialTransferFeeAmount
	ExtensionTypeMetadataPointer
	ExtensionTypeTokenMetadata
	ExtensionTypeGroupPointer
	ExtensionTypeTokenGroup
	ExtensionTypeGroupMemberPointer
	ExtensionTypeTokenGroupMember
)

func (value ExtensionType) String() string {
	switch value {
	case ExtensionTypeUninitialized:
		return "Uninitialized"
	case ExtensionTypeTransferFeeConfig:
		return "TransferFeeConfig"
	case ExtensionTypeTransferFeeAmount:
		return "TransferFeeAmount"
	case ExtensionTypeMintCloseAuthority:
		return "MintCloseAuthority"
	case ExtensionTypeConfidentialTransferMint:
		return "ConfidentialTransferMint"
	case ExtensionTypeConfidentialTransferAccount:
		return "ConfidentialTransferAccount"
	case ExtensionTypeDefaultAccountState:
		return "DefaultAccountState"
	case ExtensionTypeImmutableOwner:
		return "ImmutableOwner"
	case ExtensionTypeMemoTransfer:
		return "MemoTransfer"
	case ExtensionTypeNonTransferable:
		return "NonTransferable"
	case ExtensionTypeInterestBearingConfig:
		return "InterestBearingConfig"
	case ExtensionTypeCpiGuard:
		return "CpiGuard"
	case ExtensionTypePermanentDelegate:
		return "PermanentDelegate"
	case ExtensionTypeNonTransferableAccount:
		return "NonTransferableAccount"
	case ExtensionTypeTransferHook:
		return "TransferHook"
	case ExtensionTypeTransferHookAccount:
		return "TransferHookAccount"
	case ExtensionTypeConfidentialTransferFeeConfig:
		return "ConfidentialTransferFeeConfig"
	case ExtensionTypeConfidentialTransferFeeAmount:
		return "ConfidentialTransferFeeAmount"
	case ExtensionTypeMetadataPointer:
		return "MetadataPointer"
	case ExtensionTypeTokenMetadata:
		return "TokenMetadata"
	case ExtensionTypeGroupPointer:
		return "GroupPointer"
	case ExtensionTypeTokenGroup:
		return "TokenGroup"
	case ExtensionTypeGroupMemberPointer:
		return "GroupMemberPointer"
	case ExtensionTypeTokenGroupMember:
		return "TokenGroupMember"
	default:
		return ""
	}
}

// AuthorityType Enum
type AuthorityType binary.BorshEnum

const (
	AuthorityTypeMintTokens AuthorityType = iota
	AuthorityTypeFreezeAccount
	AuthorityTypeAccountOwner
	AuthorityTypeCloseAccount
	AuthorityTypeTransferFeeConfig
	AuthorityTypeWithheldWithdraw
	AuthorityTypeCloseMint
	AuthorityTypeInterestRate
	AuthorityTypePermanentDelegate
	AuthorityTypeConfidentialTransferMint
	AuthorityTypeTransferHookProgramId
	AuthorityTypeConfidentialTransferFeeConfig
	AuthorityTypeMetadataPointer
	AuthorityTypeGroupPointer
	AuthorityTypeGroupMemberPointer
)

func (value AuthorityType) String() string {
	switch value {
	case AuthorityTypeMintTokens:
		return "MintTokens"
	case AuthorityTypeFreezeAccount:
		return "FreezeAccount"
	case AuthorityTypeAccountOwner:
		return "AccountOwner"
	case AuthorityTypeCloseAccount:
		return "CloseAccount"
	case AuthorityTypeTransferFeeConfig:
		return "TransferFeeConfig"
	case AuthorityTypeWithheldWithdraw:
		return "WithheldWithdraw"
	case AuthorityTypeCloseMint:
		return "CloseMint"
	case AuthorityTypeInterestRate:
		return "InterestRate"
	case AuthorityTypePermanentDelegate:
		return "PermanentDelegate"
	case AuthorityTypeConfidentialTransferMint:
		return "ConfidentialTransferMint"
	case AuthorityTypeTransferHookProgramId:
		return "TransferHookProgramId"
	case AuthorityTypeConfidentialTransferFeeConfig:
		return "ConfidentialTransferFeeConfig"
	case AuthorityTypeMetadataPointer:
		return "MetadataPointer"
	case AuthorityTypeGroupPointer:
		return "GroupPointer"
	case AuthorityTypeGroupMemberPointer:
		return "GroupMemberPointer"
	default:
		return ""
	}
}
