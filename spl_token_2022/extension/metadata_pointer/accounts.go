// This code was AUTOGENERATED using the library.
// Please DO NOT EDIT THIS FILE.

package metadata_pointer

import (
	common "github.com/donutnomad/solana-web3/common"
	binary "github.com/gagliardetto/binary"
)

// MetadataPointer Struct
type MetadataPointer struct {
	// Authority that can set the metadata address
	Authority common.PublicKey
	// Account address that holds the metadata
	MetadataAddress common.PublicKey
}

const METADATA_POINTER_SIZE = 64

func (obj *MetadataPointer) MarshalWithEncoder(encoder *binary.Encoder) (err error) {
	if err = encoder.Encode(&obj.Authority); err != nil {
		return err
	}
	if err = encoder.Encode(&obj.MetadataAddress); err != nil {
		return err
	}
	return nil
}

func (obj *MetadataPointer) UnmarshalWithDecoder(decoder *binary.Decoder) (err error) {
	if err = decoder.Decode(&obj.Authority); err != nil {
		return err
	}
	if err = decoder.Decode(&obj.MetadataAddress); err != nil {
		return err
	}
	return nil
}
